version: "3.7"
services:

  # Nginx reverse proxy
  nginx-prod:
    container_name: nginx-prod
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      # - 5000:80
      - 80:80 # for production
      # - 443:443
    depends_on:
      - web
    network_mode: "host"

  web:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: web
    restart: always
    env_file:
      - ./.env
    environment:
      # - CELERY_RESULT_BACKEND=redis://redis-prod:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
      - SQS_NAME=log_upload_s3
      - CELERY_DEFAULT_QUEUE=default
    # ports:
    #  - "5000:5000"
    expose:
      - 5000
    depends_on:
      - redis-prod
    # volumes line used for hot code reloading
    volumes: ['./api:/api', 'static_volume:/uploads']
    network_mode: "host"

  worker:
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    container_name: worker
    env_file:
      - ./.env
    environment:
      # - CELERY_RESULT_BACKEND=redis://redis-prod:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
      - SQS_NAME=log_upload_s3
      - CELERY_DEFAULT_QUEUE=default
    # user: nobody
    depends_on:
      - redis-prod
    volumes: ['./celery-queue:/queue', 'static_volume:/uploads']
    network_mode: "host"

  # monitor:
  #   build:
  #     context: ./celery-queue
  #     dockerfile: Dockerfile
  #   container_name: monitor
  #   env_file:
  #     - ./.env
  #   ports:
  #    - "5555:5555"
  #   entrypoint: flower
  #   command:  -A tasks --port=5555 --broker=redis://redis-prod:6379/0
  #   depends_on:
  #     - redis-prod
  #   volumes: ['./celery-queue:/queue']

  redis-prod:
    container_name: "redis-prod"
    image: redis:5-alpine
    # ports:
    #   - 6379:6379
    volumes:
      - './redis.conf:/usr/local/etc/redis/redis.conf'
    expose:
      - 6379
    network_mode: "host"

volumes: 
  static_volume: